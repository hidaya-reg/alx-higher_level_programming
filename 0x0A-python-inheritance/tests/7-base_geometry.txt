===============================
The ``7-base_geometry`` module
===============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 29, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: width must be greater than 0
>>> bg.integer_validator("width", -5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 29, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: width must be greater than 0
>>> bg.integer_validator("width", True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 26, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: width must be an integer
>>> bg.integer_validator("width", "light")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 26, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: width must be an integer
